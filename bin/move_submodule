#!/usr/bin/env bash

# ======================================================================================
#
#         FILE:  move_submodule
#
#        USAGE:  ./move_submodule current/submodule/path new/submodule/path
#
#  DESCRIPTION:  Move the specified submodule and into a new location.
#
#      OPTIONS:  ---
# REQUIREMENTS:  ---
#         BUGS:  ---
#        NOTES:  ---
#       AUTHOR:  Duke Mai <henryfromvietnam@gmail.com>
#      COMPANY:  ---
#      VERSION:  1.0
#      CREATED:  May 18, 2025
#     REVISION:  ---
#
# ======================================================================================


set -eu

source "${DOTFILES}"/bash/functions

if ! [[ -d .git ]]; then
  log_error "Not a Git repository"
  exit 1
elif [[ $# -ne 2 ]]; then
  log_error "Usage: $0 <current_submodule_path> <new_submodule_path>"
  exit 1
else
  if [[ -d "${1}" ]] && [[ -d .git/modules/"${1}" ]]; then
    log_manual_action "Do you wish to move the submodule \"${1}\" to \"${2}\"?"
    select answer in "Yes" "No"; do
      case "${answer}" in
        Yes)
          # Remove the existing submodule
          log_task "Removing submodule from \"${1}\"..."
          git submodule deinit --force "${1}"
          git rm --cached --force "${1}"
          rm -rf .git/modules/"${1}"
          # Add the submodule to the new location
          log_task "Adding submodule to \"${2}\"..."
          mkdir -p "$(dirname "${2}")"
          git submodule add "$(git config -f .gitmodules --get "submodule.${1}.url")" "${2}"
          git submodule update --init --recursive
          # Commit the changes
          log_task "Committing changes..."
          git commit --no-gpg-sign -m "chore: move submodule from \"${1}\" \"${2}\""
          git pull
          git push
          exit 0
          ;;
        No)
          log_task "Abort"
          exit 0
          ;;
        *)
          log_error "1 or 2"
          ;;
      esac
    done
  else
    log_error "No submodule found in the specified path \"${1}\""
  fi
fi
