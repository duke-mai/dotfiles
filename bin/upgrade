#!/usr/bin/env bash

# ======================================================================================
#
#         FILE:  upgrade
#
#        USAGE:  ./upgrade
#
#  DESCRIPTION:  Update system's linux, python, and pip packages.
#
#      OPTIONS:  ---
# REQUIREMENTS:  ---
#         BUGS:  ---
#        NOTES:  ---
#       AUTHOR:  Henry Mai <henryfromvietnam@gmail.com>
#      COMPANY:  ---
#      VERSION:  1.0
#      CREATED:  2023-05-02
#     REVISION:  ---
#
# ======================================================================================


source "${DOTFILES}"/bash/functions

clear

CMDS=(python3 pip pip-review npm go-global-update cowsay docker docker-clean gh)

REPOS=(
/usr/share/forgit/
/usr/local/share/pandoc-from-markdown-to-pdf/
/usr/share/dict/english-words/
/usr/share/completion-ruby/
/usr/share/bash-preexec/
"${HOME}"/.rbenv/
"${HOME}"/.password-store/
)

log_task "Check for updates to the Operating System ..."
sudo apt update
yes | sudo apt dist-upgrade
yes | sudo apt full-upgrade
yes | sudo apt autoremove
sudo apt autoclean

check_command() {
  [[ ! -x "$(command -v "${1}")" ]] \
    && log_manual_action "This script requires ${1}!" \
    && exit 1
}

check_if_have_master_or_main_branch() {
  if_have_master_branch() { git show-ref --verify --quiet refs/heads/master ; }
  if_have_main_branch() { git show-ref --verify --quiet refs/heads/main ; }
  if if_have_master_branch; then git pull origin master
  elif if_have_main_branch; then git pull origin main; fi
}

log_task "Check for available commands ..."
for cmd in "${CMDS[@]}"; do check_command "${cmd}"; done

log_task "Check for remote changes in installed repositories ..."
for repo in "${REPOS[@]}"; do
  cd "${repo}" || exit
  check_if_have_master_or_main_branch
done

log_task "Check for updates to pip packages ..."
pip install --upgrade --user pip setuptools wheel pip-review
"${HOME}"/.local/bin/pip-review --local --auto 2> /tmp/upgrade-error.txt
[[ -s /tmp/upgrade-error.txt ]] \
  && log_error 'pip packages conflict ➡️ "/tmp/upgrade-error.txt"' \
  && sed -i '1d' /tmp/upgrade-error.txt

log_task "Update npm packages ..."
# npm install --global npm@latest
npm update --global

log_task "Update go packages ..."
go-global-update

log_task "Update docker images ..."
docker images | grep -v REPOSITORY | awk '{print $1}'| xargs -L1 docker pull

log_task "Remove unused docker images ..."
docker-clean

log_task "Update a database for plocate ..."
sudo updatedb

log_task "Update Copilot extension ..."
gh extension upgrade gh-copilot

cowsay You are up to date!
